{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalpa\\\\Downloads\\\\New folder\\\\New folder\\\\src\\\\components\\\\WebSite\\\\Pages\\\\DynamicComponents\\\\SearchBar\\\\app\\\\dropdown\\\\DropDown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport './DropDown.css';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dropdown({\n  options,\n  prop,\n  value,\n  onChange,\n  id,\n  label\n}) {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const ref = useRef(null);\n  const [query, setQuery] = useState('');\n  useEffect(() => {\n    document.addEventListener('click', close);\n    return () => document.removeEventListener('click', close);\n  }, []);\n\n  function close(e) {\n    setOpen(e && e.target === ref.current);\n  }\n\n  function filter(options) {\n    return options.filter(option => option[label].toLowerCase().indexOf(query.toLowerCase()) > -1);\n  }\n\n  function displayValue() {\n    if (query.length > 0) return query;\n    if (value) return value[label];\n    return '';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control\",\n      onClick: () => setOpen(prev => !prev),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-value\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searchinput\",\n          type: \"text\",\n          ref: ref,\n          placeholder: value ? value[label] : prop,\n          value: displayValue,\n          onChange: e => {\n            setQuery(e.target.value);\n            onChange(null);\n          },\n          onClick: () => setOpen(prev => !prev)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `arrow ${open ? 'open' : null}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `options ${open ? 'open' : null}`,\n      children: [filter(options).map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `option ${value === option ? 'selected' : null}`,\n        onClick: () => {\n          onChange(option);\n          setOpen(false);\n          setQuery('');\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          as: Link,\n          to: \"/pharmacy-search\",\n          children: option[label]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }, this)\n      }, option[id], false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Dropdown, \"n7PQsM/B3M1JTlU8cwLBVUbyPIs=\");\n\n_c = Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["C:/Users/kalpa/Downloads/New folder/New folder/src/components/WebSite/Pages/DynamicComponents/SearchBar/app/dropdown/DropDown.js"],"names":["React","useState","useEffect","useRef","Link","Dropdown","options","prop","value","onChange","id","label","open","setOpen","ref","query","setQuery","document","addEventListener","close","removeEventListener","e","target","current","filter","option","toLowerCase","indexOf","displayValue","length","prev","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport './DropDown.css'\nimport { Link } from \"react-router-dom\";\n\nexport default function Dropdown({options, prop, value, onChange, id, label}) {\n    const [open, setOpen] = useState(false);\n    const ref = useRef(null)\n    const [query, setQuery] = useState('')\n\n    useEffect(() => {\n        document.addEventListener('click', close);\n        return () => document.removeEventListener('click', close);\n    }, [])\n\n    function close(e) {\n        setOpen(e && e.target === ref.current)\n    }\n\n    function filter(options) {\n        return options.filter(\n            (option) => \n            option[label].toLowerCase().indexOf(query.toLowerCase()) > -1\n        )\n    }\n\n    function displayValue() {\n      if(query.length > 0) return query\n      if(value) return value[label]\n      return '';\n    }\n\n  return <div className=\"dropdown\">\n    <div className=\"control\" onClick={() => setOpen((prev ) => !prev)}>\n      <div className=\"selected-value\">\n          <input className=\"searchinput\" type=\"text\" ref={ref} placeholder={value ? value[label] : prop} value={displayValue} onChange={e => \n          {\n              setQuery(e.target.value)\n              onChange(null)\n          }} onClick={() => setOpen((prev) => !prev)}/>\n          </div>\n      <div className={`arrow ${open ? 'open' : null}`}></div>\n    </div>\n    <div className={`options ${open ? 'open' : null}`}>\n      {\n        filter(options).map((option) => (\n          <div key={option[id]} className={`option ${value === option ? 'selected' : null}`} \n          onClick={() => {\n              onChange(option)\n              setOpen(false)\n              setQuery('')\n          }}><Link as={Link} to=\"/pharmacy-search\">{option[label]}</Link></div>\n        ))\n      }\n      <option value=\"\"></option>\n    </div>\n  </div>\n}\n"]},"metadata":{},"sourceType":"module"}